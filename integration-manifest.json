{
    "$schema": "https://keyfactor.github.io/v2/integration-manifest-schema.json",
    "integration_type": "orchestrator",
    "name": "Akamai Certificate Provisioning System (CPS)",
    "status": "production",
    "release_dir": "akamai-cps-orchestrator/bin/Release/netcoreapp3.1",
    "update_catalog": true,
    "link_github": true,
    "description": "The Akamai CPS Universal Orchestrator extension enables remote management of cryptographic certificates within the Akamai platform by supporting inventory, adding, and removing operations as well as certificate reenrollment.",
    "about": {
        "orchestrator": {
            "store_types": [
                {
                    "Name": "Akamai Certificate Provisioning Service",
                    "ShortName": "Akamai",
                    "Capability": "Akamai",
                    "LocalStore": false,
                    "SupportedOperations": {
                        "Add": false,
                        "Create": false,
                        "Discovery": false,
                        "Enrollment": true,
                        "Remove": false
                    },
                    "Properties": [],
                    "EntryParameters": [],
                    "PasswordOptions": {
                        "EntrySupported": false,
                        "StoreRequired": false,
                        "Style": "Default"
                    },
                    "StorePathType": "MultipleChoice",
                    "StorePathValue": "[\"Production\",\"Staging\"]",
                    "PrivateKeyAllowed": "Forbidden",
                    "ServerRequired": false,
                    "PowerShell": false,
                    "BlueprintAllowed": false,
                    "CustomAliasAllowed": "Forbidden",
                    "ClientMachineDescription": "The hostname for the Akamai API endpoint used for certificate management. Example: `host`",
                    "StorePathDescription": "The specific environment within Akamai where the certificates will be managed, either 'Production' or 'Staging'. Example: `Production`"
                }
            ]
        }
    },
    "support_level": "kf-supported"
}